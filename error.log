{"level":"error","message":"Error sending OTP: Missing credentials for \"PLAIN\""}
{"level":"error","message":"Error sending OTP: Missing credentials for \"PLAIN\""}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\nE:\\full steck projects\\Ekka\\server\\src\\controllers\\vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\nE:\\full steck projects\\Ekka\\server\\src\\controllers\\vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: data and hash arguments required"}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error sending OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:72:36\n\n  69 const { email } = req.body;\n  70 \n  71 try {\n→ 72   const user = await prisma.user.findUnique({\n         where: {\n           email: undefined,\n       ?   id?: String,\n       ?   AND?: UserWhereInput | UserWhereInput[],\n       ?   OR?: UserWhereInput[],\n       ?   NOT?: UserWhereInput | UserWhereInput[],\n       ?   password?: StringFilter | String,\n       ?   firstName?: StringFilter | String,\n       ?   lastName?: StringFilter | String,\n       ?   phoneNumber?: StringNullableFilter | String | Null,\n       ?   profileImage?: StringNullableFilter | String | Null,\n       ?   coverPhoto?: StringNullableFilter | String | Null,\n       ?   createdAt?: DateTimeFilter | DateTime,\n       ?   updatedAt?: DateTimeFilter | DateTime,\n       ?   role?: EnumUserRoleFilter | UserRole,\n       ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n       ?   otpCode?: StringNullableFilter | String | Null,\n       ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n       ?   addresses?: AddressListRelationFilter,\n       ?   products?: ProductListRelationFilter,\n       ?   reviews?: ReviewListRelationFilter,\n       ?   cart?: CartListRelationFilter,\n       ?   wishlist?: WishlistListRelationFilter,\n       ?   Order?: OrderListRelationFilter,\n       ?   Store?: StoreListRelationFilter\n         }\n       })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\n/root/ekka-server/src/controllers/vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error sending OTP: \nInvalid `prisma.user.findUnique()` invocation in\nE:\\full steck projects\\Ekka\\server\\src\\controllers\\vendorController.ts:72:36\n\n  69 const { email } = req.body;\n  70 \n  71 try {\n→ 72   const user = await prisma.user.findUnique({\n         where: {\n           email: undefined,\n       ?   id?: String,\n       ?   AND?: UserWhereInput | UserWhereInput[],\n       ?   OR?: UserWhereInput[],\n       ?   NOT?: UserWhereInput | UserWhereInput[],\n       ?   password?: StringFilter | String,\n       ?   firstName?: StringFilter | String,\n       ?   lastName?: StringFilter | String,\n       ?   phoneNumber?: StringNullableFilter | String | Null,\n       ?   profileImage?: StringNullableFilter | String | Null,\n       ?   coverPhoto?: StringNullableFilter | String | Null,\n       ?   createdAt?: DateTimeFilter | DateTime,\n       ?   updatedAt?: DateTimeFilter | DateTime,\n       ?   role?: EnumUserRoleFilter | UserRole,\n       ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n       ?   otpCode?: StringNullableFilter | String | Null,\n       ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n       ?   addresses?: AddressListRelationFilter,\n       ?   products?: ProductListRelationFilter,\n       ?   reviews?: ReviewListRelationFilter,\n       ?   cart?: CartListRelationFilter,\n       ?   wishlist?: WishlistListRelationFilter,\n       ?   Order?: OrderListRelationFilter,\n       ?   Store?: StoreListRelationFilter\n         }\n       })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\nE:\\full steck projects\\Ekka\\server\\src\\controllers\\vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\nE:\\full steck projects\\Ekka\\server\\src\\controllers\\vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error sending OTP: \nInvalid `prisma.user.findUnique()` invocation in\nE:\\full steck projects\\Ekka\\server\\src\\controllers\\vendorController.ts:72:36\n\n  69 const { email } = req.body;\n  70 \n  71 try {\n→ 72   const user = await prisma.user.findUnique({\n         where: {\n           email: undefined,\n       ?   id?: String,\n       ?   AND?: UserWhereInput | UserWhereInput[],\n       ?   OR?: UserWhereInput[],\n       ?   NOT?: UserWhereInput | UserWhereInput[],\n       ?   password?: StringFilter | String,\n       ?   firstName?: StringFilter | String,\n       ?   lastName?: StringFilter | String,\n       ?   phoneNumber?: StringNullableFilter | String | Null,\n       ?   profileImage?: StringNullableFilter | String | Null,\n       ?   coverPhoto?: StringNullableFilter | String | Null,\n       ?   createdAt?: DateTimeFilter | DateTime,\n       ?   updatedAt?: DateTimeFilter | DateTime,\n       ?   role?: EnumUserRoleFilter | UserRole,\n       ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n       ?   otpCode?: StringNullableFilter | String | Null,\n       ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n       ?   addresses?: AddressListRelationFilter,\n       ?   products?: ProductListRelationFilter,\n       ?   reviews?: ReviewListRelationFilter,\n       ?   cart?: CartListRelationFilter,\n       ?   wishlist?: WishlistListRelationFilter,\n       ?   Order?: OrderListRelationFilter,\n       ?   Store?: StoreListRelationFilter\n         }\n       })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\nE:\\full steck projects\\Ekka\\server\\src\\controllers\\vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error sending OTP: \nInvalid `prisma.user.findUnique()` invocation in\nE:\\full steck projects\\Ekka\\server\\src\\controllers\\vendorController.ts:72:36\n\n  69 const { email } = req.body;\n  70 \n  71 try {\n→ 72   const user = await prisma.user.findUnique({\n         where: {\n           email: undefined,\n       ?   id?: String,\n       ?   AND?: UserWhereInput | UserWhereInput[],\n       ?   OR?: UserWhereInput[],\n       ?   NOT?: UserWhereInput | UserWhereInput[],\n       ?   password?: StringFilter | String,\n       ?   firstName?: StringFilter | String,\n       ?   lastName?: StringFilter | String,\n       ?   phoneNumber?: StringNullableFilter | String | Null,\n       ?   profileImage?: StringNullableFilter | String | Null,\n       ?   coverPhoto?: StringNullableFilter | String | Null,\n       ?   createdAt?: DateTimeFilter | DateTime,\n       ?   updatedAt?: DateTimeFilter | DateTime,\n       ?   role?: EnumUserRoleFilter | UserRole,\n       ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n       ?   otpCode?: StringNullableFilter | String | Null,\n       ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n       ?   addresses?: AddressListRelationFilter,\n       ?   products?: ProductListRelationFilter,\n       ?   reviews?: ReviewListRelationFilter,\n       ?   cart?: CartListRelationFilter,\n       ?   wishlist?: WishlistListRelationFilter,\n       ?   Order?: OrderListRelationFilter,\n       ?   Store?: StoreListRelationFilter\n         }\n       })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
{"level":"error","message":"Error verifying OTP: \nInvalid `prisma.user.findUnique()` invocation in\nE:\\full steck projects\\Ekka\\server\\src\\controllers\\vendorController.ts:113:36\n\n  110 const { email, otpCode } = req.body;\n  111 \n  112 try {\n→ 113   const user = await prisma.user.findUnique({\n          where: {\n            email: undefined,\n        ?   id?: String,\n        ?   AND?: UserWhereInput | UserWhereInput[],\n        ?   OR?: UserWhereInput[],\n        ?   NOT?: UserWhereInput | UserWhereInput[],\n        ?   password?: StringFilter | String,\n        ?   firstName?: StringFilter | String,\n        ?   lastName?: StringFilter | String,\n        ?   phoneNumber?: StringNullableFilter | String | Null,\n        ?   profileImage?: StringNullableFilter | String | Null,\n        ?   coverPhoto?: StringNullableFilter | String | Null,\n        ?   createdAt?: DateTimeFilter | DateTime,\n        ?   updatedAt?: DateTimeFilter | DateTime,\n        ?   role?: EnumUserRoleFilter | UserRole,\n        ?   verificationStatus?: EnumVerificationStatusFilter | VerificationStatus,\n        ?   otpCode?: StringNullableFilter | String | Null,\n        ?   otpExpiry?: DateTimeNullableFilter | DateTime | Null,\n        ?   addresses?: AddressListRelationFilter,\n        ?   products?: ProductListRelationFilter,\n        ?   reviews?: ReviewListRelationFilter,\n        ?   cart?: CartListRelationFilter,\n        ?   wishlist?: WishlistListRelationFilter,\n        ?   Order?: OrderListRelationFilter,\n        ?   Store?: StoreListRelationFilter\n          }\n        })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?."}
